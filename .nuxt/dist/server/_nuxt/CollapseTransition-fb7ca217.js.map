{"version":3,"file":"CollapseTransition-fb7ca217.js","sources":["../../../../node_modules/@ivanv/vue-collapse-transition/src/CollapseTransition.vue"],"sourcesContent":["<template>\n    <transition :name=\"name\"\n                @before-appear=\"beforeAppear\"\n                @appear=\"appear\"\n                @after-appear=\"afterAppear\"\n                @appear-cancelled=\"appearCancelled\"\n                @before-enter=\"beforeEnter\"\n                @enter=\"enter\"\n                @after-enter=\"afterEnter\"\n                @enter-cancelled=\"enterCancelled\"\n                @before-leave=\"beforeLeave\"\n                @leave=\"leave\"\n                @after-leave=\"afterLeave\"\n                @leave-cancelled=\"leaveCancelled\"\n    >\n        <slot></slot>\n    </transition>\n</template>\n\n<script>\n    export default {\n        name: \"CollapseTransition\",\n\n        props: {\n            name: {\n                type: String,\n                required: false,\n                default: 'collapse'\n            },\n            dimension: {\n                type: String,\n                required: false,\n                default: 'height',\n                validator: (value) => {\n                    return ['height', 'width'].includes(value)\n                }\n            },\n            duration: {\n                type: Number,\n                required: false,\n                default: 300\n            },\n            easing: {\n                type: String,\n                required: false,\n                default: 'ease-in-out'\n            },\n        },\n\n        watch: {\n            dimension() {\n                this.clearCachedDimensions()\n            }\n        },\n\n        data() {\n            return {\n                cachedStyles: null,\n            }\n        },\n\n        computed: {\n            transition() {\n                let transitions = []\n\n                Object.keys(this.cachedStyles).forEach((key) => {\n                    transitions.push(`${this.convertToCssProperty(key)} ${this.duration}ms ${this.easing}`)\n                })\n\n                return transitions.join(', ')\n            }\n        },\n\n        methods: {\n            beforeAppear(el) {\n                // Emit the event to the parent\n                this.$emit('before-appear', el)\n            },\n\n            appear(el) {\n                // Emit the event to the parent\n                this.$emit('appear', el)\n            },\n\n            afterAppear(el) {\n                // Emit the event to the parent\n                this.$emit('after-appear', el)\n            },\n\n            appearCancelled(el) {\n                // Emit the event to the parent\n                this.$emit('appear-cancelled', el)\n            },\n\n            beforeEnter(el) {\n                // Emit the event to the parent\n                this.$emit('before-enter', el)\n            },\n\n            enter(el, done) {\n                // Because width and height may be 'auto',\n                // first detect and cache the dimensions\n                this.detectAndCacheDimensions(el)\n\n                // The order of applying styles is important:\n                // - 1. Set styles for state before transition\n                // - 2. Force repaint\n                // - 3. Add transition style\n                // - 4. Set styles for state after transition\n                // If the order is not right and you open any 2nd level submenu\n                // for the first time, the transition will not work.\n                this.setClosedDimensions(el)\n                this.hideOverflow(el)\n                this.forceRepaint(el)\n                this.setTransition(el)\n                this.setOpenedDimensions(el)\n\n                // Emit the event to the parent\n                this.$emit('enter', el, done)\n\n                // Call done() when the transition ends\n                // to trigger the @after-enter event.\n                setTimeout(done, this.duration)\n            },\n\n            afterEnter(el) {\n                // Clean up inline styles\n                this.unsetOverflow(el)\n                this.unsetTransition(el)\n                this.unsetDimensions(el)\n                this.clearCachedDimensions()\n\n                // Emit the event to the parent\n                this.$emit('after-enter', el)\n            },\n\n            enterCancelled(el) {\n                // Emit the event to the parent\n                this.$emit('enter-cancelled', el)\n            },\n\n            beforeLeave(el) {\n                // Emit the event to the parent\n                this.$emit('before-leave', el)\n            },\n\n            leave(el, done) {\n                // For some reason, @leave triggered when starting\n                // from open state on page load. So for safety,\n                // check if the dimensions have been cached.\n                this.detectAndCacheDimensions(el)\n\n                // The order of applying styles is less important\n                // than in the enter phase, as long as we repaint\n                // before setting the closed dimensions.\n                // But it is probably best to use the same\n                // order as the enter phase.\n                this.setOpenedDimensions(el)\n                this.hideOverflow(el)\n                this.forceRepaint(el)\n                this.setTransition(el)\n                this.setClosedDimensions(el)\n\n                // Emit the event to the parent\n                this.$emit('leave', el, done)\n\n                // Call done() when the transition ends\n                // to trigger the @after-leave event.\n                // This will also cause v-show\n                // to reapply 'display: none'.\n                setTimeout(done, this.duration)\n            },\n\n            afterLeave(el) {\n                // Clean up inline styles\n                this.unsetOverflow(el)\n                this.unsetTransition(el)\n                this.unsetDimensions(el)\n                this.clearCachedDimensions()\n\n                // Emit the event to the parent\n                this.$emit('after-leave', el)\n            },\n\n            leaveCancelled(el) {\n                // Emit the event to the parent\n                this.$emit('leave-cancelled', el)\n            },\n\n            detectAndCacheDimensions(el) {\n                // Cache actual dimensions\n                // only once to void invalid values when\n                // triggering during a transition\n                if (this.cachedStyles) return\n\n                const visibility = el.style.visibility\n                const display = el.style.display\n\n                // Trick to get the width and\n                // height of a hidden element\n                el.style.visibility = 'hidden'\n                el.style.display = ''\n\n                this.cachedStyles = this.detectRelevantDimensions(el)\n\n                // Restore any original styling\n                el.style.visibility = visibility\n                el.style.display = display\n            },\n\n            clearCachedDimensions() {\n                this.cachedStyles = null\n            },\n\n            detectRelevantDimensions(el) {\n                // These properties will be transitioned\n                if (this.dimension === 'height') {\n                    return {\n                        'height': el.offsetHeight + 'px',\n                        'paddingTop': el.style.paddingTop || this.getCssValue(el, 'padding-top'),\n                        'paddingBottom': el.style.paddingBottom || this.getCssValue(el, 'padding-bottom'),\n                    }\n                }\n\n                if (this.dimension === 'width') {\n                    return {\n                        'width': el.offsetWidth + 'px',\n                        'paddingLeft': el.style.paddingLeft || this.getCssValue(el, 'padding-left'),\n                        'paddingRight': el.style.paddingRight || this.getCssValue(el, 'padding-right'),\n                    }\n                }\n\n                return {}\n            },\n\n            setTransition(el) {\n                el.style.transition = this.transition\n            },\n\n            unsetTransition(el) {\n                el.style.transition = ''\n            },\n\n            hideOverflow(el) {\n                el.style.overflow = 'hidden'\n            },\n\n            unsetOverflow(el) {\n                el.style.overflow = ''\n            },\n\n            setClosedDimensions(el) {\n                Object.keys(this.cachedStyles).forEach(key => {\n                    el.style[key] = '0'\n                })\n            },\n\n            setOpenedDimensions(el) {\n                Object.keys(this.cachedStyles).forEach((key) => {\n                    el.style[key] = this.cachedStyles[key]\n                })\n            },\n\n            unsetDimensions(el) {\n                Object.keys(this.cachedStyles).forEach((key) => {\n                    el.style[key] = ''\n                })\n            },\n\n            forceRepaint(el) {\n                // Force repaint to make sure the animation is triggered correctly.\n                // Thanks: https://markus.oberlehner.net/blog/transition-to-height-auto-with-vue/\n                getComputedStyle(el)[this.dimension]\n            },\n\n            getCssValue(el, style) {\n                return getComputedStyle(el, null).getPropertyValue(style)\n            },\n\n            convertToCssProperty(style) {\n                // Example: convert 'paddingTop' to 'padding-top'\n                // Thanks: https://gist.github.com/tan-yuki/3450323\n                const upperChars = style.match(/([A-Z])/g)\n\n                if ( ! upperChars) {\n                    return style\n                }\n\n                for (let i = 0, n = upperChars.length; i < n; i++) {\n                    style = style.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase())\n                }\n\n                if (style.slice(0, 1) === '-') {\n                    style = style.slice(1)\n                }\n\n                return style\n            }\n        }\n    }\n</script>\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}