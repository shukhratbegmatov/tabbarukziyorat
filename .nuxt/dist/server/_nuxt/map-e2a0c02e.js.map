{"version":3,"file":"map-e2a0c02e.js","sources":["../../../../components/Common/Tab.vue","../../../../components/Map/Main.vue","../../../../../../../../svg/empty-state.svg","../../../../components/Map/Sidebar.vue","../../../../components/Form/CheckboxGroup.vue","../../../../data/map.ts","../../../../components/Map/Modal.vue","../../../../pages/map.vue"],"sourcesContent":["<template>\n  <div\n    class=\"main-tab relative bg-white/12 rounded-full flex w-max transition-300 overflow-hidden\"\n  >\n    <div\n      :class=\"activeClass\"\n      class=\"absolute h-full rounded-full bg-white w-full -translate-y-1/2 top-1/2 transition-300 text-dark\"\n      :style=\"{ width: `${active.width}px`, left: `${active.left}px` }\"\n    ></div>\n    <button\n      v-for=\"(tab, idx) in list\"\n      :id=\"`item_${tab.value}`\"\n      :key=\"idx\"\n      :class=\"[\n        itemClass,\n        modelValue === tab.value ? 'text-dark hover:!text-dark' : '!text-white',\n      ]\"\n      class=\"tabs py-2.5 px-6 rounded-full transition-300 w-full text-lg font-medium z-10 hover:text-dark font-medium tabs\"\n      @click=\"pick(tab.value, $event)\"\n    >\n      {{ tab.label }}\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ITabItem } from '~/types/components'\n\ninterface Props {\n  modelValue: string | number\n  list: ITabItem[]\n  itemClass?: string\n  activeClass?: string\n}\nconst props = defineProps<Props>()\n\ninterface Emits {\n  (e: 'update:modelValue', value: string | number): void\n}\nconst $emit = defineEmits<Emits>()\n\nconst active = ref({ left: 0, width: 0 })\nconst pick = (tab: string | number, e?: { target: HTMLButtonElement }) => {\n  const target = e.target as HTMLButtonElement\n  active.value = {\n    left: target?.offsetLeft,\n    width: target?.offsetWidth,\n  }\n  $emit('update:modelValue', tab)\n}\n\n\nwatch(\n    () => props.modelValue,\n    () => {\n      const item = document.getElementById(\n          `item_${props.modelValue}`\n      ) as HTMLButtonElement;\n      pick(props.modelValue, { target: item });\n    }\n);\n\nonMounted(() => {\n  const item = document.getElementById(\n    `item_${props.modelValue}`\n  ) as HTMLButtonElement\n  setTimeout(() => {\n    pick(props.modelValue, { target: item })\n  }, 1)\n})\n</script>\n","<template>\n  <div class=\"relative\">\n    <ClientOnly>\n      <yandex-map\n        class=\"h-full w-full\"\n        :coords=\"coords\"\n        :settings=\"mapSettings\"\n        :zoom=\"zoom\"\n        :controls=\"[]\"\n        :class=\"mapClass\"\n      >\n        <ymap-marker\n          v-for=\"(item, index) in locations\"\n          :key=\"index\"\n          :coords=\"formatLocation(item.location)\"\n          marker-id=\"123\"\n          :hint-content=\"item.name\"\n          :icon=\"markerIcon(item?.religion?.type)\"\n          :balloon-template=\"balloonTemplate(item)\"\n          @mouseenter=\"onMouseenterMarker\"\n          @mouseleave=\"onMouseleaveMarker\"\n          @balloonopen=\"onBalloonOpen\"\n        />\n      </yandex-map>\n    </ClientOnly>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ILocation } from '~/types/locations'\nimport { EReligion } from '~/types/religions'\n\ninterface Props {\n  modelValue: number[]\n  locations: ILocation[]\n  mapClass?: string\n  defaultCoords?: number[]\n}\n\nconst zoom = ref(14)\n\nconst props = withDefaults(defineProps<Props>(), {})\n\nconst emit = defineEmits<{\n  (e: 'update:modelValue', value: object): void\n}>()\n\nfunction getReligionIcon(religion: EReligion) {\n  switch (religion) {\n    case EReligion.ISLAM:\n      return '/svg/religions/islam.svg'\n    case EReligion.CHRISTIANITY:\n      return '/svg/religions/christianity.svg'\n    case EReligion.BUDDHISM:\n      return '/svg/religions/buddhism.svg'\n    case EReligion.ABOUT:\n      return '/svg/religions/about.svg'\n    default:\n      return ''\n  }\n}\nconst markerIcon = (icon: string) => {\n  return {\n    layout: 'default#imageWithContent',\n    imageHref: getReligionIcon(icon),\n    imageSize: [50, 50],\n    imageOffset: [-20, -30],\n  }\n}\n\nconst handleMarker = (target: object) => {\n  console.log(target, 'target')\n}\n\nconst formatLocation = (target: string) => {\n  return target.split(';')\n}\n\nconst coords = ref([41.31, 69.26])\nwatch(\n  () => props.defaultCoords,\n  () => {\n    if (props.defaultCoords?.length) {\n      coords.value = props.defaultCoords\n    }\n  },\n  {\n    immediate: true,\n  }\n)\nwatch(\n  () => coords.value,\n  () => {\n    emit('update:modelValue', coords.value)\n  },\n  {\n    deep: true,\n  }\n)\nconst mapSettings = ref({\n  apiKey: '',\n  lang: 'ru_RU',\n  coordorder: 'latlong',\n  version: '2.1',\n})\n\nconst balloonTemplate = computed(() => {\n  return function (item: ILocation) {\n    return `\n         <a href=\"/destination/${\n           item?.slug\n         }\"  class=\"relative bg-dark rounded-xl overflow-visible p-2 inline-block w-[142px]\">\n          <img\n            src=\"${item?.image}\"\n            class=\"object-cover h-20 max-w-[126px] w-full rounded-xl\"\n            alt=\"Map image\"\n          />\n          <p class=\"mt-2 mb-1 text-[10px] text-[#83848D] line-clamp-1 leading-120\">\n            ${item?.region?.title} ${\n      item?.region?.title ? `<span>,</span>` : ''\n    }\n                 ${item?.destination_country?.title}\n          </p>\n          <p class=\"text-xs text-white font-semibold leading-130\"> ${\n            item?.title\n          } </p>\n\n      </a>\n    `\n  }\n})\n\nfunction onMouseenterMarker(e: any) {\n  e.get('target').balloon.open()\n}\nfunction onMouseleaveMarker(e: any) {\n  e.get('target').balloon.close()\n}\nfunction onBalloonOpen(e: any) {\n  setTimeout(() => {\n    e.get('target').balloon.close()\n  }, 1500)\n}\n</script>\n<style>\n.ymap-container {\n  height: 100vh;\n}\n.ymaps-2-1-79-balloon__layout {\n  background: transparent !important;\n}\n.ymaps-2-1-79-balloon__content {\n  background: transparent !important;\n  padding: 0 !important;\n  margin-right: 0 !important;\n  border-radius: 12px !important;\n}\n.ymaps-2-1-79-balloon__tail {\n  display: none !important;\n}\n.ymaps-2-1-79-balloon__close-button {\n  display: none !important;\n}\n.ymaps-2-1-79-balloon,\n.ymaps-2-1-79-balloon__layout,\n.ymaps-2-1-79-balloon__content {\n  background: transparent !important;\n  border: none !important;\n  box-shadow: none !important;\n}\n</style>\n","export default \"__VITE_PUBLIC_ASSET__cd88fd8a__\"","<template>\n  <aside class=\"h-screen grid grid-rows-max-1 w-[404px] bg-dark map-sidebar\">\n    <div class=\"border-b border-white/8 p-5\">\n      <div class=\"flex items-center gap-2 mb-3\">\n        <button @click=\"$router.push('/')\" class=\"group\">\n          <i\n            class=\"icon-arrow-left text-white text-2xl transition-300 group-hover:text-white/60\"\n          ></i>\n        </button>\n        <NuxtLink :to=\"localePath('/')\">\n          <CommonLogo :key=\"loading\" />\n        </NuxtLink>\n      </div>\n      <div v-if=\"width > 900\" class=\"flex gap-3\">\n        <FormInput\n          v-model=\"search\"\n          @update:modelValue=\"handleSearch\"\n          :placeholder=\"$t('search')\"\n        >\n          <template #prefix>\n            <span\n              class=\"icon-search text-xl leading-5 text-gray-400 mr-2 transition-300\"\n            />\n          </template>\n          <template #suffix>\n            <span\n              class=\"icon-xmark text-gray-400 -my-0.5 text-2xl leading-6 transition duration-300 cursor-pointer hover:text-gray\"\n              :class=\"\n                search?.length ? 'opacity-100 visible' : 'opacity-0 invisible'\n              \"\n              @click=\"clearInput\"\n            />\n          </template>\n        </FormInput>\n        <button\n          class=\"shrink-0 text-gray-200 transition-300 hover:text-white\"\n          @click=\"emit('open-filter')\"\n        >\n          <i class=\"icon-sliders text-2xl\"></i>\n        </button>\n      </div>\n      <CommonTab\n        :list=\"tabs\"\n        v-model=\"activeTab\"\n        class=\"!w-full mt-4 hidden tab-sidebar\"\n      />\n    </div>\n    <Transition name=\"fade\" mode=\"out-in\">\n      <div\n        :key=\"activeTab\"\n        class=\"h-full max-h-full overflow-y-auto custom-scroll px-4 lg:px-0\"\n      >\n        <div v-if=\"activeTab === 'list'\">\n          <div v-if=\"width < 900\" class=\"flex gap-3 my-4\">\n            <FormInput\n              v-model=\"search\"\n              @update:modelValue=\"handleSearch\"\n              :placeholder=\"$t('search')\"\n            >\n              <template #prefix>\n                <span\n                  class=\"icon-search text-xl leading-5 text-gray-400 mr-2 transition-300\"\n                />\n              </template>\n              <template #suffix>\n                <span\n                  class=\"icon-xmark text-gray-400 -my-0.5 text-2xl leading-6 transition duration-300 cursor-pointer hover:text-gray\"\n                  :class=\"\n                    search?.length\n                      ? 'opacity-100 visible'\n                      : 'opacity-0 invisible'\n                  \"\n                  @click=\"clearInput\"\n                />\n              </template>\n            </FormInput>\n            <button\n              class=\"shrink-0 text-gray-200 transition-300 hover:text-white\"\n              @click=\"emit('open-filter')\"\n            >\n              <i class=\"icon-sliders text-2xl\"></i>\n            </button>\n          </div>\n          <div v-if=\"locations?.length\" class=\"py-4\">\n            <CardLocationItem\n              v-for=\"(location, idx) of loading ? 13 : locations\"\n              :key=\"idx\"\n              :loading=\"loading\"\n              :data=\"location\"\n              @click=\"observeCard(location)\"\n            />\n            <div ref=\"target\" />\n          </div>\n\n          <template v-if=\"!locations?.length && popular?.length\">\n            <div\n              class=\"flex flex-col justify-center items-center pt-6 pb-8 border-b border-b-white/10\"\n            >\n              <img src=\"/svg/empty-state.svg\" alt=\"No data\" />\n              <p\n                class=\"mt-4 text-white/60 max-w-[280px] text-center font-medium\"\n              >\n                {{ $t('no_results_found_text') }}\n              </p>\n            </div>\n            <template v-if=\"popular?.length\">\n              <h3 class=\"text-white px-5 mt-4 text-lg font-medium\">\n                {{ $t('popular_attractions') }}\n              </h3>\n              <CardLocationItem\n                v-for=\"(location, idx) of popular\"\n                :key=\"idx\"\n                :data=\"location\"\n              />\n            </template>\n          </template>\n        </div>\n        <div v-else class=\"w-full h-full\">\n          <MapMain :default-coords=\"coords\" :locations=\"locations\" />\n        </div>\n      </div>\n    </Transition>\n  </aside>\n</template>\n<script lang=\"ts\" setup>\nimport { ITabItem } from '~/types/components'\nimport { ILocation } from '~/types/locations'\nimport { debounce } from '~/utils/index'\nimport { computed, ref } from 'vue'\nimport { useWindowSize, useIntersectionObserver } from '@vueuse/core'\nimport { useDestinationStore } from '~/store/destination'\n\nconst { width } = useWindowSize()\ninterface Props {\n  locations: ILocation[]\n  popular: ILocation[]\n  loading: boolean\n}\nconst props = defineProps<Props>()\nconst emit = defineEmits<{\n  (e: 'open-filter'): void\n  (e: 'handleSearch', value: string): void\n  (e: 'observe', value: string): void\n  (e: 'observeDestinations'): void\n}>()\n\nconst destinationStore = useDestinationStore()\n\nconst search = ref('')\nconst coords = ref([])\n\nconst target = ref(null)\nconst targetIsVisible = ref(false)\n\nconst next = computed(() => destinationStore.next)\n\nconst { stop } = useIntersectionObserver(\n  target,\n  ([{ isIntersecting }], observerElement) => {\n    targetIsVisible.value = isIntersecting\n    if (targetIsVisible.value && next?.value !== null) {\n      emit('observeDestinations')\n    }\n  }\n)\n\nconst handleSearch = (value: string) => {\n  search.value = value\n  debounce('search', () => {\n    emit('handleSearch', search.value)\n  })\n}\n\nfunction clearInput() {\n  search.value = ''\n  emit('handleSearch', '')\n}\n\nfunction observeCard(location: ILocation) {\n  if (width.value < 900) {\n    activeTab.value = 'map'\n  }\n  coords.value = location?.location?.split(';')\n  emit('observe', location)\n}\n\nconst activeTab = ref<ITabItem['value']>('list')\nconst tabs: ITabItem[] = [\n  {\n    label: 'Map',\n    value: 'map',\n  },\n  {\n    label: 'List',\n    value: 'list',\n  },\n]\n</script>\n\n<style scoped>\n@media screen and (max-width: 900px) {\n  .map-sidebar {\n    width: 100%;\n    display: block;\n  }\n\n  .tab-sidebar {\n    display: flex;\n  }\n}\n\n.custom-scroll::-webkit-scrollbar {\n  height: 3px;\n  width: 8px;\n  background-color: #969696;\n}\n\n.custom-scroll::-moz-scrollbar {\n  height: 3px;\n  width: 8px;\n  background-color: #969696;\n}\n\n.custom-scroll::-ms-scrollbar {\n  height: 3px;\n  width: 8px;\n  background-color: #969696;\n}\n\n.custom-scroll::-o-scrollbar {\n  height: 3px;\n  width: 8px;\n  background-color: #969696;\n}\n\n.custom-scroll::-webkit-scrollbar-thumb {\n  background-color: #e54545;\n  border-radius: 5px;\n}\n\n.custom-scroll::-moz-scrollbar-thumb {\n  background-color: #e54545;\n  border-radius: 5px;\n}\n\n.custom-scroll::-ms-scrollbar-thumb {\n  background-color: #e54545;\n  border-radius: 5px;\n}\n\n.custom-scroll::-o-scrollbar-thumb {\n  background-color: #e54545;\n  border-radius: 5px;\n}\n</style>\n","<template>\n  <slot>\n    <div v-if=\"items && Object.keys(items).length > 0\" :class=\"wrapperClass\">\n      <slot v-if=\"isAll\" name=\"all\" />\n      <FormCheckbox\n        v-for=\"(item, index) in items\"\n        :key=\"index\"\n        :label=\"item[labelKey]\"\n        :value=\"item[valueKey]\"\n        :name=\"name\"\n        :checked=\"modelValue?.includes(String(item.id))\"\n        :icon=\"item.flag\"\n        @update:modelValue=\"onUpdate\"\n      />\n    </div>\n  </slot>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\n\ninterface Props {\n  modelValue: string | number | object | []\n  items: object\n  labelKey?: string\n  valueKey?: string\n  wrapperClass?: string\n  name?: string\n  isAll?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  wrapperClass: 'flex flex-wrap gap-4',\n  labelKey: 'name',\n  valueKey: 'id',\n  name: `k-checkbox-${Math.floor(Math.random() * 1000)}`,\n})\n\nconst emit = defineEmits<{\n  (e: 'update:modelValue', value: string | number | object): void\n}>()\n\nconst onUpdate = (e: string | number) => {\n  const newValue: (number | string | object)[] = [...props.modelValue]\n  if (newValue.includes(e)) {\n    newValue.splice(newValue.indexOf(e), 1)\n  } else {\n    newValue.push(e)\n  }\n  emit('update:modelValue', newValue)\n}\n</script>\n","export const religions = [\n  {\n    title: 'All',\n    value: 'all',\n  },\n  {\n    title: 'Islam',\n    value: 'islam',\n    icon: '/rel_icons/islam.svg',\n  },\n  {\n    title: 'Christianity',\n    value: 'christianity',\n    icon: '/rel_icons/christianity.svg',\n  },\n  {\n    title: 'Buddhism',\n    value: 'buddhism',\n    icon: '/rel_icons/buddhism.svg',\n  },\n]\nexport const countries = [\n  {\n    title: 'All',\n    value: 'all',\n  },\n  {\n    title: 'Uzbekistan',\n    value: 1,\n    icon: '/rel_icons/islam.svg',\n  },\n  {\n    title: 'Turkmenistan',\n    value: 2,\n  },\n  {\n    title: 'Türkiye',\n    value: 3,\n  },\n]\nexport function mapFilter(t: (s: string) => string, options: any) {\n  return [\n    {\n      label: t('choose_religion'),\n      name: 'religion',\n      labelKey: 'title',\n      valueKey: 'id',\n      options: options?.religion,\n    },\n    {\n      label: t('choose_country'),\n      name: 'country',\n      labelKey: 'title',\n      valueKey: 'id',\n      options: options?.country,\n    },\n  ]\n}\n","<template>\n  <div>\n    <CommonModal v-bind=\"{ show }\" :title=\"$t('filter')\" @close=\"emit('close')\">\n      <div class=\"text-white flex flex-col\">\n        <div class=\"space-y-6 overflow-y-auto max-h-[500px] lg:max-h-fit p-5\">\n          <div\n            class=\"relative\"\n            v-for=\"(item, index) in mapFilterList?.slice(0, 1)\"\n            :key=\"index\"\n          >\n            <FormLabel :label=\"item.label\" :for-id=\"item.name\" class=\"mb-4\" />\n\n            <FormCheckboxGroup\n              :items=\"item.options\"\n              :name=\"item.name\"\n              :label-key=\"item.labelKey\"\n              :value-key=\"item.valueKey\"\n              v-model=\"form.religion\"\n              wrapper-class=\"grid md:grid-cols-2 grid-cols-1 gap-5\"\n              is-all\n            >\n              <template #all>\n                <FormCheckbox\n                  :label=\"$t('all')\"\n                  :value=\"!isAllReligion\"\n                  :checked=\"isAllReligion\"\n                  :name=\"name\"\n                  @update:modelValue=\"onUpdate\"\n                />\n              </template>\n            </FormCheckboxGroup>\n          </div>\n          <div\n            class=\"relative\"\n            v-for=\"(item, index) in mapFilterList.slice(1, 2)\"\n            :key=\"index\"\n          >\n            <FormLabel :label=\"item.label\" :for-id=\"item.name\" class=\"mb-4\" />\n            <FormCheckboxGroup\n              :items=\"item.options\"\n              :name=\"item.name\"\n              :label-key=\"item.labelKey\"\n              :value-key=\"item.valueKey\"\n              v-model=\"form[item.name]\"\n              wrapper-class=\"grid md:grid-cols-2 grid-cols-1 gap-5\"\n              is-all\n            >\n              <template #all>\n                <FormCheckbox\n                  :label=\"$t('all')\"\n                  :value=\"!isAllCountry\"\n                  :checked=\"isAllCountry\"\n                  :name=\"name\"\n                  @update:modelValue=\"onUpdateCountry\"\n                />\n              </template>\n            </FormCheckboxGroup>\n          </div>\n        </div>\n        <div class=\"flex items-center gap-4 p-5\">\n          <CommonButton\n            :text=\"$t('clear')\"\n            class=\"w-full\"\n            variant=\"secondary\"\n            @click=\"clear\"\n          />\n          <CommonButton :text=\"$t('apply')\" class=\"w-full\" @click=\"apply\" />\n        </div>\n      </div>\n    </CommonModal>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { mapFilter } from '~/data/map'\nimport { useI18n } from 'vue-i18n'\nimport { TReligion } from '@/types/religions'\nimport { TCountries } from '@/types/countries'\nimport { ILocation } from '~/types/locations'\n\nconst { t } = useI18n()\nconst route = useRoute()\nconst router = useRouter()\ninterface Props {\n  show?: boolean\n  religions?: TReligion[]\n  countries?: TCountries[]\n}\nconst props = defineProps<Props>()\nconst emit = defineEmits<{\n  (e: 'close'): void\n  (e: 'handleFilter', value: object): void\n}>()\nconst form = ref({\n  religion: [],\n  country: [],\n})\nconst isAllReligion = ref(false)\nconst isAllCountry = ref(false)\nconst mapFilterList = computed(() => {\n  const data = {\n    religion: props?.religions,\n    country: props?.countries,\n  }\n  return mapFilter(t, data)\n})\n\nconst apply = () => {\n  const query = {\n    ...route.query,\n    religion: form.value.religion?.join(','),\n    country: form.value.country?.join(','),\n  }\n  router.push({\n    ...route,\n    query: {\n      ...query,\n    },\n  })\n  emit('handleFilter', {\n    religion: isAllReligion.value ? undefined : form.value.religion?.join(','),\n    country: isAllCountry.value ? undefined : form.value.country?.join(','),\n  })\n  emit('close')\n}\n\nconst clear = () => {\n  for (const key in form.value) {\n    form.value[key] = undefined\n  }\n  apply()\n}\n\nwatch(\n  () => props.show,\n  () => {\n    if (!props.show) {\n      form.value.religion = []\n      form.value.country = []\n    } else {\n      form.value.religion = route.query.religion?.split(',') ?? []\n      form.value.country = route.query.country?.split(',') ?? []\n    }\n  }\n)\n\nfunction onUpdate(e) {\n  isAllReligion.value = !isAllReligion.value\n}\n\nfunction onUpdateCountry(e) {\n  isAllCountry.value = !isAllCountry.value\n}\n\nwatch(\n  () => isAllReligion.value,\n  () => {\n    if (isAllReligion.value) {\n      props.religions?.forEach((el: ILocation) => {\n        if (!form.value.religion?.includes(String(el?.id))) {\n          form.value.religion?.push(String(el?.id))\n        }\n      })\n    } else {\n      if (form.value.religion?.length === props.religions?.length) {\n        form.value.religion = []\n      }\n    }\n  }\n)\n\nwatch(\n  () => form.value.religion,\n  () => {\n    isAllReligion.value =\n      form.value.religion?.length === props.religions?.length\n  },\n  {\n    deep: true,\n  }\n)\n\nwatch(\n  () => isAllCountry.value,\n  () => {\n    if (isAllCountry.value) {\n      props.countries?.forEach((el: ILocation) => {\n        if (!form.value.country?.includes(String(el?.id))) {\n          form.value.country?.push(String(el?.id))\n        }\n      })\n    } else {\n      if (form.value.country?.length === props.countries?.length) {\n        form.value.country = []\n      }\n    }\n  }\n)\n\nwatch(\n  () => form.value.country,\n  () => {\n    isAllCountry.value = form.value.country?.length === props.countries?.length\n  },\n  {\n    deep: true,\n  }\n)\n</script>\n","<template>\n  <main\n    class=\"h-screen w-screen grid grid-cols-max-1 overflow-hidden map-wrapper\"\n  >\n    <MapSidebar\n      v-if=\"mounted\"\n      :loading=\"loading\"\n      :locations=\"destinations\"\n      :popular=\"popularDestinations\"\n      @handleSearch=\"handleSearchDestination\"\n      @open-filter=\"handleShowFilter\"\n      @observe=\"observeMap\"\n      @observeDestinations=\"handleObserveDestinations\"\n    />\n    <div v-if=\"width > 900\" class=\"w-full h-full\">\n      <div id=\"map\" class=\"w-full h-full\">\n        <MapMain\n          :default-coords=\"coords\"\n          :locations=\"destinations\"\n          :key=\"destinations\"\n        />\n      </div>\n    </div>\n    <MapModal\n      v-bind=\"{ show, religions: religionList, countries: countryList }\"\n      @close=\"show = false\"\n      @handleFilter=\"handleFilter\"\n    />\n  </main>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref, watch } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { definePageMeta } from '#imports'\nimport { useMounted } from '~/composables/useMounted'\nimport { useDestinationStore } from '~/store/destination'\nimport { useWindowSize } from '@vueuse/core'\nimport { ILocation } from '~/types/locations'\n\nconst { width } = useWindowSize()\n\ndefinePageMeta({\n  layout: 'empty',\n})\n\nconst mounted = useMounted()\nconst coords = ref([])\n\nconst route = useRoute()\nconst loading = ref(false)\n\nconst destinationStore = useDestinationStore()\n\nconst popularDestinations = computed(() => destinationStore.popularDestination)\n\nconst destinations = ref([])\nconst limit = ref(100)\nconst religionList = computed(() => destinationStore.religionList)\nconst countryList = computed(() => destinationStore.countryList)\n\nconst show = ref(false)\n\nconst fetchData = () => {\n  loading.value = true\n  fetchDestinations()\n  destinationStore.fetchPopularDestination()\n  destinationStore.fetchReligionList()\n  destinationStore.fetchCountryList()\n}\n\nconst fetchDestinations = () => {\n  const value = {\n    religion: route?.query?.religion,\n    country: route?.query?.country,\n  }\n  destinationStore\n    .fetchDestinations(\n      '',\n      limit.value,\n      value.religion ?? undefined,\n      value.country ?? undefined\n    )\n    .then((res) => {\n      destinations.value = res\n    })\n    .finally(() => {\n      setTimeout(() => {\n        loading.value = false\n      }, 400)\n    })\n}\nconst handleObserveDestinations = () => {\n  loading.value = true\n  limit.value += 5\n  fetchDestinations()\n}\nfunction handleFilter(value: object) {\n  loading.value = true\n  destinationStore\n    .fetchDestinations('', limit.value, value.religion, value.country)\n    .then((res) => {\n      destinations.value = res\n    })\n    .finally(() => {\n      setTimeout(() => {\n        loading.value = false\n      }, 100)\n    })\n}\n\nfunction handleShowFilter() {\n  show.value = true\n}\nfunction observeMap(location: ILocation) {\n  coords.value = location?.location?.split(';')\n}\n\nwatch(\n  () => destinations.value,\n  () => {\n    coords.value = destinations.value[0]?.location?.split(';')\n  },\n  {\n    deep: true,\n  }\n)\n\nfunction handleSearchDestination(value: string) {\n  destinationStore.fetchDestinations(value).then((res) => {\n    destinations.value = res\n  })\n}\nonMounted(() => {\n  fetchData()\n})\n</script>\n\n<style scoped>\n@media screen and (max-width: 900px) {\n  .map-wrapper {\n    width: 100%;\n    display: block;\n  }\n}\n</style>\n"],"names":["_a","_b","useRoute"],"mappings":"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"}