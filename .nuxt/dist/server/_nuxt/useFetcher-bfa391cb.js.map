{"version":3,"file":"useFetcher-bfa391cb.js","sources":["../../../../node_modules/nuxt/dist/app/composables/cookie.mjs","../../../../utils/index.ts","../../../../composables/useFetcher.ts"],"sourcesContent":["import { ref, watch } from \"vue\";\nimport { parse, serialize } from \"cookie-es\";\nimport { appendHeader } from \"h3\";\nimport destr from \"destr\";\nimport { isEqual } from \"ohash\";\nimport { useNuxtApp } from \"../nuxt.mjs\";\nimport { useRequestEvent } from \"./ssr.mjs\";\nconst CookieDefaults = {\n  path: \"/\",\n  watch: true,\n  decode: (val) => destr(decodeURIComponent(val)),\n  encode: (val) => encodeURIComponent(typeof val === \"string\" ? val : JSON.stringify(val))\n};\nexport function useCookie(name, _opts) {\n  const opts = { ...CookieDefaults, ..._opts };\n  const cookies = readRawCookies(opts) || {};\n  const cookie = ref(cookies[name] ?? opts.default?.());\n  if (process.client) {\n    const callback = () => {\n      writeClientCookie(name, cookie.value, opts);\n    };\n    if (opts.watch) {\n      watch(cookie, callback, { deep: opts.watch !== \"shallow\" });\n    } else {\n      callback();\n    }\n  } else if (process.server) {\n    const nuxtApp = useNuxtApp();\n    const writeFinalCookieValue = () => {\n      if (!isEqual(cookie.value, cookies[name])) {\n        writeServerCookie(useRequestEvent(nuxtApp), name, cookie.value, opts);\n      }\n    };\n    const unhook = nuxtApp.hooks.hookOnce(\"app:rendered\", writeFinalCookieValue);\n    nuxtApp.hooks.hookOnce(\"app:redirected\", () => {\n      unhook();\n      return writeFinalCookieValue();\n    });\n  }\n  return cookie;\n}\nfunction readRawCookies(opts = {}) {\n  if (process.server) {\n    return parse(useRequestEvent()?.req.headers.cookie || \"\", opts);\n  } else if (process.client) {\n    return parse(document.cookie, opts);\n  }\n}\nfunction serializeCookie(name, value, opts = {}) {\n  if (value === null || value === void 0) {\n    return serialize(name, value, { ...opts, maxAge: -1 });\n  }\n  return serialize(name, value, opts);\n}\nfunction writeClientCookie(name, value, opts = {}) {\n  if (process.client) {\n    document.cookie = serializeCookie(name, value, opts);\n  }\n}\nfunction writeServerCookie(event, name, value, opts = {}) {\n  if (event) {\n    appendHeader(event, \"Set-Cookie\", serializeCookie(name, value, opts));\n  }\n}\n","export const share = (network: string, title: string) => {\n  console.log(window.location.href)\n  if (process.client) {\n    switch (network) {\n      case 'telegram':\n        window.open(\n          `https://t.me/share/url?url=${window.location.href}&text=${title}`,\n          '_blank'\n        )\n        break\n      case 'twitter':\n        window.open(\n          `https://twitter.com/intent/tweet?text=${title}\\n+${window.location.href}`,\n          '_blank'\n        )\n        break\n      case 'facebook':\n        window.open(\n          `https://www.facebook.com/sharer/sharer.php?u=${window.location.href}&display=iframe&quote=${title}`,\n          '_blank'\n        )\n        break\n    }\n  }\n}\n\nexport const toEmbed = (url: string) => {\n  let regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/\n  let match = url.match(regExp)\n  if (match && match[2].length === 11) {\n    return match[2]\n  } else {\n    return 'error'\n  }\n}\n\nexport const formatPhoneNumber = (number: string) => {\n  const format = number\n    ?.replace(/\\D/g, '')\n    .match(/(\\d{0,3})(\\d{0,2})(\\d{0,3})(\\d{0,2})(\\d{0,2})/)\n  return `+${format && format[1] ? format[1] : ''}\n          ${format && format[2] ? format[2] : ''}\n          ${format && format[3] ? format[3] : ''} ${\n    format && format[4] ? format[4] : ''\n  }${format && format[5] ? format[5] : ''}`\n}\n\nexport function generateUUID() {\n  // Public Domain/MIT\n  let d = new Date().getTime() //Timestamp\n  let d2 =\n    (typeof performance !== 'undefined' &&\n      performance.now &&\n      performance.now() * 1000) ||\n    0 //Time in microseconds since page-load or 0 if unsupported\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    let r = Math.random() * 16 //random number between 0 and 16\n    if (d > 0) {\n      //Use timestamp until depleted\n      r = (d + r) % 16 | 0\n      d = Math.floor(d / 16)\n    } else {\n      //Use microseconds since page-load if supported\n      r = (d2 + r) % 16 | 0\n      d2 = Math.floor(d2 / 16)\n    }\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16)\n  })\n}\nconst timeouts = {}\n\nconst cTimeout = (key = 'key') => {\n  if (timeouts[key]) {\n    clearTimeout(timeouts[key])\n    timeouts[key] = undefined\n  }\n}\n\nexport const debounce = (key = 'key', fn = () => {}, timeout = 500) => {\n  const sTimeout = (key, fn, timeout) => {\n    cTimeout(key)\n\n    timeouts[key] = setTimeout(() => {\n      try {\n        fn()\n      } catch (e) {\n        console.log(e)\n      }\n\n      timeouts[key] = undefined\n    }, timeout)\n  }\n\n  return sTimeout(key, fn, timeout)\n}\n\nexport function calculateNumberWithShortcuts(number) {\n  const symbols = {\n    B: 1000000000,\n    M: 1000000,\n    K: 1000,\n  }\n\n  for (const symbol in symbols) {\n    if (number >= symbols[symbol]) {\n      const formattedNumber = number / symbols[symbol]\n      return formattedNumber.toFixed(1) + symbol\n    }\n  }\n\n  return number.toString()\n}\n","import { FetchOptions } from 'ohmyfetch'\nimport { NitroFetchRequest } from 'nitropack'\n\nclass ApiFetcher {\n  public readonly baseUrl: string\n\n  constructor(baseUrl: string) {\n    this.baseUrl = baseUrl\n  }\n  private generateFingerprint() {\n    const cookie = useCookie('visitorId')\n    if (!cookie.value) {\n      cookie.value = generateUUID()\n    }\n    return cookie.value\n  }\n\n  private $service(options: FetchOptions) {\n    const locale = useCookie('locale')\n    return $fetch.create({\n      ...options,\n      baseURL: this.baseUrl,\n      headers: {\n        Fingerprint: this.generateFingerprint(),\n        ...options?.headers,\n        'Accept-Language': locale.value || 'en',\n      },\n    })\n  }\n\n  public $get<T = any>(\n    endpoint: NitroFetchRequest,\n    options?: FetchOptions\n  ): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.$service(options)(endpoint)\n        .then((response: T) => {\n          resolve(response)\n        })\n        .catch((error) => {\n          reject(error.response)\n        })\n    })\n  }\n\n  public $post<T = any>(\n    endpoint: NitroFetchRequest,\n    options?: FetchOptions\n  ): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.$service({ ...options, method: 'POST' })(endpoint)\n        .then((response: T) => {\n          resolve(response)\n        })\n        .catch((error) => reject(error.response))\n    })\n  }\n\n  public $put<T = any>(\n    endpoint: NitroFetchRequest,\n    options?: FetchOptions\n  ): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.$service({ ...options, method: 'PUT' })(endpoint)\n        .then((response: T) => {\n          resolve(response)\n        })\n        .catch((error) => reject(error.response))\n    })\n  }\n\n  public $patch<T = any>(\n    endpoint: NitroFetchRequest,\n    options?: FetchOptions\n  ): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.$service({ ...options, method: 'PATCH' })(endpoint)\n        .then((response: T) => {\n          resolve(response)\n        })\n        .catch((error) => reject(error.response))\n    })\n  }\n\n  public $delete<T = any>(\n    endpoint: NitroFetchRequest,\n    options?: FetchOptions\n  ): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.$service({ ...options, method: 'DELETE' })(endpoint)\n        .then((response: T) => {\n          resolve(response)\n        })\n        .catch((error) => reject(error.response))\n    })\n  }\n}\n\nexport const $api = new ApiFetcher(import.meta.env.VITE_APP_BASE_URL as string)\n"],"names":["key","fn","timeout"],"mappings":"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","x_google_ignoreList":[0]}